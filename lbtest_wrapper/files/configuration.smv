MODULE main


VAR
state: {qq,dqdd,d,dqddrqddrrd,dqddrq,I,dqddrqddr,dqddrqd,dq,q,dqddr,dqddrqddrrdqq,dqddrqddrr,dqd,dqddrqdd,dqddrqddrrdq};
in_game : {no,yes};
people_in_queue : {zero,one,two};
IVAR
input : {q,r,d};



ASSIGN
init(state) := I;
init(in_game) := no;
init(people_in_queue) := zero;


next(state):= case
	state = qq & input = q : dqddrqddrrdqq;
	state = qq & input = r : I;
	state = qq & input = d : dqddrqddrrdqq;
	state = dqdd & input = q : q;
	state = dqdd & input = r : dqddr;
	state = dqdd & input = d : I;
	state = d & input = q : dq;
	state = d & input = r : I;
	state = d & input = d : I;
	state = dqddrqddrrd & input = q : dqddrqddrrdq;
	state = dqddrqddrrd & input = r : I;
	state = dqddrqddrrd & input = d : I;
	state = dqddrq & input = q : dqddrqddrrdqq;
	state = dqddrq & input = r : q;
	state = dqddrq & input = d : dqddrqd;
	state = I & input = q : q;
	state = I & input = r : I;
	state = I & input = d : d;
	state = dqddrqddr & input = q : q;
	state = dqddrqddr & input = r : dqddrqddrr;
	state = dqddrqddr & input = d : I;
	state = dqddrqd & input = q : q;
	state = dqddrqd & input = r : I;
	state = dqddrqd & input = d : dqddrqdd;
	state = dq & input = q : dqddrqddrrdqq;
	state = dq & input = r : q;
	state = dq & input = d : dqd;
	state = q & input = q : qq;
	state = q & input = r : q;
	state = q & input = d : I;
	state = dqddr & input = q : dqddrq;
	state = dqddr & input = r : I;
	state = dqddr & input = d : I;
	state = dqddrqddrrdqq & input = q : dqddrqddrrdqq;
	state = dqddrqddrrdqq & input = r : I;
	state = dqddrqddrrdqq & input = d : dqddrqddrrdqq;
	state = dqddrqddrr & input = q : q;
	state = dqddrqddrr & input = r : I;
	state = dqddrqddrr & input = d : dqddrqddrrd;
	state = dqd & input = q : q;
	state = dqd & input = r : I;
	state = dqd & input = d : dqdd;
	state = dqddrqdd & input = q : q;
	state = dqddrqdd & input = r : dqddrqddr;
	state = dqddrqdd & input = d : I;
	state = dqddrqddrrdq & input = q : dqddrqddrrdqq;
	state = dqddrqddrrdq & input = r : q;
	state = dqddrqddrrdq & input = d : I;
	esac;


next(in_game):= case
	state = qq & input = q : yes;
	state = qq & input = r : no;
	state = qq & input = d : yes;
	state = dqdd & input = q : no;
	state = dqdd & input = r : no;
	state = dqdd & input = d : no;
	state = d & input = q : no;
	state = d & input = r : no;
	state = d & input = d : no;
	state = dqddrqddrrd & input = q : no;
	state = dqddrqddrrd & input = r : no;
	state = dqddrqddrrd & input = d : no;
	state = dqddrq & input = q : yes;
	state = dqddrq & input = r : no;
	state = dqddrq & input = d : no;
	state = I & input = q : no;
	state = I & input = r : no;
	state = I & input = d : no;
	state = dqddrqddr & input = q : no;
	state = dqddrqddr & input = r : no;
	state = dqddrqddr & input = d : no;
	state = dqddrqd & input = q : no;
	state = dqddrqd & input = r : no;
	state = dqddrqd & input = d : no;
	state = dq & input = q : yes;
	state = dq & input = r : no;
	state = dq & input = d : no;
	state = q & input = q : no;
	state = q & input = r : no;
	state = q & input = d : no;
	state = dqddr & input = q : no;
	state = dqddr & input = r : no;
	state = dqddr & input = d : no;
	state = dqddrqddrrdqq & input = q : yes;
	state = dqddrqddrrdqq & input = r : no;
	state = dqddrqddrrdqq & input = d : yes;
	state = dqddrqddrr & input = q : no;
	state = dqddrqddrr & input = r : no;
	state = dqddrqddrr & input = d : no;
	state = dqd & input = q : no;
	state = dqd & input = r : no;
	state = dqd & input = d : no;
	state = dqddrqdd & input = q : no;
	state = dqddrqdd & input = r : no;
	state = dqddrqdd & input = d : no;
	state = dqddrqddrrdq & input = q : yes;
	state = dqddrqddrrdq & input = r : no;
	state = dqddrqddrrdq & input = d : no;
	esac;
next(people_in_queue):= case
	state = qq & input = q : zero;
	state = qq & input = r : zero;
	state = qq & input = d : zero;
	state = dqdd & input = q : one;
	state = dqdd & input = r : zero;
	state = dqdd & input = d : zero;
	state = d & input = q : one;
	state = d & input = r : zero;
	state = d & input = d : zero;
	state = dqddrqddrrd & input = q : one;
	state = dqddrqddrrd & input = r : zero;
	state = dqddrqddrrd & input = d : zero;
	state = dqddrq & input = q : zero;
	state = dqddrq & input = r : one;
	state = dqddrq & input = d : zero;
	state = I & input = q : one;
	state = I & input = r : zero;
	state = I & input = d : zero;
	state = dqddrqddr & input = q : one;
	state = dqddrqddr & input = r : zero;
	state = dqddrqddr & input = d : zero;
	state = dqddrqd & input = q : one;
	state = dqddrqd & input = r : zero;
	state = dqddrqd & input = d : zero;
	state = dq & input = q : zero;
	state = dq & input = r : one;
	state = dq & input = d : zero;
	state = q & input = q : one;
	state = q & input = r : one;
	state = q & input = d : zero;
	state = dqddr & input = q : one;
	state = dqddr & input = r : zero;
	state = dqddr & input = d : zero;
	state = dqddrqddrrdqq & input = q : zero;
	state = dqddrqddrrdqq & input = r : zero;
	state = dqddrqddrrdqq & input = d : zero;
	state = dqddrqddrr & input = q : one;
	state = dqddrqddrr & input = r : zero;
	state = dqddrqddrr & input = d : zero;
	state = dqd & input = q : one;
	state = dqd & input = r : zero;
	state = dqd & input = d : zero;
	state = dqddrqdd & input = q : one;
	state = dqddrqdd & input = r : zero;
	state = dqddrqdd & input = d : zero;
	state = dqddrqddrrdq & input = q : zero;
	state = dqddrqddrrdq & input = r : one;
	state = dqddrqddrrdq & input = d : zero;
	esac;


LTLSPEC
G(people_in_queue=zero & input=q & in_game=FALSE -> X(people_in_queue=one))
